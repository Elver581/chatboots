const { createBot, createProvider, createFlow, addKeyword, EVENTS } = require('@bot-whatsapp/bot');
const QRPortalWeb = require('@bot-whatsapp/portal');
const BaileysProvider = require('@bot-whatsapp/provider/baileys');
//const MockAdapter = require('@bot-whatsapp/database/mock');
const MongoAdapter = require('@bot-whatsapp/database/mongo');
const { delay } = require('@whiskeysockets/baileys');


// Ruta del cat√°logo en tu proyecto
const catalogoURL = 'https://setasplast.com.co/assets/SetasPlastBrochureEmpresarial-eawpt2g4.pdf';

// Funci√≥n para enviar un mensaje despu√©s de 10 minutos (600000 ms)


// Funciones para cada flujo
const flowAtencionCliente = addKeyword(EVENTS.ACTION)
    .addAnswer("Hola, sigue el enlace haciendo clic en el siguiente bot√≥n:")
    .addAnswer("[üì≤ *Atenci√≥n al Cliente*](https://api.whatsapp.com/send?phone=573105083525&text=Hola)")
    .addAnswer("Gracias por comunicarte con Servicio al Cliente. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*")
    
 
    

const flowAreaComercial = addKeyword(EVENTS.ACTION)
    .addAnswer("√Årea Comercial, sigue el enlace haciendo clic en el siguiente bot√≥n:")
    .addAnswer("[üíº *√Årea Comercial*](https://api.whatsapp.com/send?phone=573145719136&text=Hola)")
    .addAnswer("Gracias por comunicarte con el √°rea comercial. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*");

const flowContabilidad = addKeyword(EVENTS.ACTION)
    .addAnswer("√Årea de Contabilidad, sigue el enlace haciendo clic en el siguiente bot√≥n:")
    .addAnswer("[üìä *Contabilidad*](https://api.whatsapp.com/send?phone=573147302425&text=Hola)")
    .addAnswer("Gracias por comunicarte con el √°rea de contabilidad. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*");
const FlowAdministrativa =addKeyword(EVENTS.ACTION)
    .addAnswer("√Årea Administrativa, sigue el enlace haciendo clic en el siguiente bot√≥n:")
    .addAnswer("[üìä *Admistrativa/Tesoreria*](https://api.whatsapp.com/send?phone=573147294876&text=Hola)")
    .addAnswer("Gracias por comunicarte con el √°rea Administrativa. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*");

const FlowGestionAmbiental = addKeyword(EVENTS.ACTION)
     .addAnswer("Gesti√≥n Ambiental, accede haciendo clic en el bot√≥n:")
    .addAnswer("[üåç *Gesti√≥n Ambiental*](https://api.whatsapp.com/send?phone=573143630641&text=Hola)")
    .addAnswer("Gracias por comunicarte con el √°rea de gestion ambiental. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*")
const flowCatalogo = addKeyword(EVENTS.ACTION)
    .addAnswer("Aqu√≠ puedes ver nuestro cat√°logo:")
    .addAnswer("[üìò *Ver Cat√°logo*]",{
        media: "https://66e4937fb3a8646e4e519a29--harmonious-chimera-7080df.netlify.app/assets/Catalogo-Cv4DpgvU.pdf"
    }) // Acceso al archivo de cat√°logo desde el proyecto
    .addAnswer("Gracias por revisar nuestro cat√°logo. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("[üíº *Si estas interasado en uno de nuestros productos sigue el siguiente enlace y contacte con nuestra linea comercial*](https://api.whatsapp.com/send?phone=573145719136&text=Hola)")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*");


const flowPqr = addKeyword(EVENTS.ACTION)
    .addAnswer("Para consultas, puedes enviarnos un correo haciendo clic en el bot√≥n:")
    .addAnswer("[‚úâÔ∏è *Enviar Correo*](mailto:servicioalclientesetasplast@gmail.com?)")
    .addAnswer("Gracias por dejarnos tu solicitud. ¬øPuedo ayudarte con algo m√°s?")
    .addAnswer("*Para regresar al Menu Principal Digita 9Ô∏è‚É£*");

// Flujo principal de bienvenida
const flowPrincipal = addKeyword(EVENTS.WELCOME)
.addAnswer(
  
    null,
    async (ctx, { gotoFlow, flowDynamic, }) => {
     // Activar recordatorio de 10 minutos
        return gotoFlow(welcomFlow); // Mostrar el men√∫ directamente
    }
).addAnswer("üëã ¬°Hola! ${nombre} Bienvenido a nuestro *Chatbot*  soy *Gaia* tu asesora vitual")

const welcomFlow= addKeyword("")
.addAnswer("üëã ¬°Hola!  Bienvenido a nuestro *Chatbot*  soy *Gaia* tu asesora vitual",{
    media:"https://66e4937fb3a8646e4e519a29--harmonious-chimera-7080df.netlify.app/assets/chatbot-CeoPh30W.jpg"
})
.addAnswer(
    [
        'Somos *SETASPLAST SAS BIC*, especializados en fabricacion y comercializaci√≥n de productos pl√°sticos *biodegradables* y *100% reciclables* üå±üåç‚ú®.',
        'Conforme a la ley 1581 de 2012 y decretos reglamentarios sus datos son tratados conforme a nuestra pol√≠tica de protecci√≥n de datos la cual puede consultar en nuestra p√°gina web. ',
        'https://setasplast.com.co',
        'Si contin√∫a con el Chat, autoriza su tratamiento.',
        
        '',
        'A continuaci√≥n te mostramos nuestras opciones principales:'
        
        
    ], 
    
    null,
    async (ctx, { gotoFlow, flowDynamic }) => {
     // Activar recordatorio de 10 minutos
        return gotoFlow(menuFlow); // Mostrar el men√∫ directamente
    }
    
)


let timeout; // Variable global para el temporizador

const resetTimeout = (ctx, { gotoFlow }) => {
    if (timeout) clearTimeout(timeout); // Limpiar el temporizador previo
    timeout = setTimeout(() => {
        gotoFlow(flujoFinal); // Ir al flujo de cancelaci√≥n por inactividad
    },3500000); // 20 segundos de inactividad 7200000
};
// Flujo para manejar las opciones del men√∫
const menuFlow = addKeyword(["9"])

.addAnswer(
    [
        'üåê *Canales de Comunicaci√≥n*',
        '',
        'Te comparto nuestros canales de comunicaci√≥n para brindarte una mejor atenci√≥n:',
        '',
        'Selecciona una *Opci√≥n*:',
        '',
        '1Ô∏è‚É£ *√Årea Comercial*',
        '2Ô∏è‚É£ *Contabilidad*',
        '3Ô∏è‚É£ *√Årea Administrativa*',
        '4Ô∏è‚É£ *Gesti√≥n Ambiental*',
        '5Ô∏è‚É£ *Atenci√≥n al Cliente*',
        '6Ô∏è‚É£ *PQR*',
        '7Ô∏è‚É£ *Cat√°logo*',
        '',
        '‚úèÔ∏è Escribe el n√∫mero correspondiente para continuar.'
    ],
  
  
        { capture: true}, // idle: 2000 = 2 segundos
        async (ctx, { gotoFlow, inRef,flowDynamic, fallBack}) => {
         resetTimeout(ctx, { gotoFlow });
            const opcionesValidas = ["1", "2", "3", "4", "5", "6", "7", "9"];
            if (!opcionesValidas.includes(ctx.body)) {
                
                return fallBack("‚ùå Respuesta no v√°lida, por favor selecciona una opci√≥n v√°lida.");
            }

             switch (ctx.body) {
                case "1":
                    return gotoFlow(flowAreaComercial);
                case "2":
                    return gotoFlow(flowContabilidad);
                case "3":
                    return gotoFlow(FlowAdministrativa);
                case "4":
                    return gotoFlow(FlowGestionAmbiental);
                case "5":
                    return gotoFlow(flowAtencionCliente);
                case "6":
                    return gotoFlow(flowPqr);
                case "7":
                    return gotoFlow(flowCatalogo);
              
                 
            }
        

            }

          
            
        
            
        
    
   
)



    
const flujoFinal = addKeyword("").addAnswer('Gracias por haber interactuado con nosotros. Si necesitas m√°s informaci√≥n, no dudes en volver a contactarnos. ¬°Que tengas un excelente d√≠a!');

 


const main = async () => {
    // Aseg√∫rate de que la URI est√© bien definida
    require('dotenv').config();

    console.log('MongoDB URI:', process.env.MONGO_DB_URI);

    const adapterDB = new MongoAdapter({
        dbUri: process.env.MONGO_DB_URI,
        dbName: "Setas"
    });

    const adapterFlow = createFlow([menuFlow, flowAtencionCliente, 
        flowAreaComercial, flowContabilidad, flowCatalogo, flowPqr, flowPrincipal,FlowAdministrativa,FlowGestionAmbiental,welcomFlow,flujoFinal]);
    const adapterProvider = createProvider(BaileysProvider);

    createBot({
        flow: adapterFlow,
        provider: adapterProvider,
        database: adapterDB,
    });

    QRPortalWeb();
};

main();